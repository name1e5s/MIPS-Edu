#include <asm.h>
#include <regdef.h>
#include <inst_test.h>

LEAF(n13_j_test)
    .set noreorder
    addiu s0, s0 ,1
    li  s2, 0x0
###test inst
    TEST_J(0x42ea6edf, 0x24071ba8, 0x42ea6edf, 0x24071ba8)
    TEST_J(0xac275df0, 0x83f0722c, 0xac275df0, 0x83f0722c)
    TEST_J(0x58b91ef0, 0x226861f5, 0x58b91ef0, 0x226861f5)
    TEST_J(0x479b3d54, 0x46df1dfb, 0x479b3d54, 0x46df1dfb)
    TEST_J(0x518a4940, 0x5e1d0288, 0x518a4940, 0x5e1d0288)
    TEST_J(0x36237e64, 0x1330ac2a, 0x36237e64, 0x1330ac2a)
    TEST_J(0xad066b28, 0xffead346, 0xad066b28, 0xffead346)
    TEST_J(0x4ee3ba5a, 0xb0423218, 0x4ee3ba5a, 0xb0423218)
    TEST_J(0x0347dbc4, 0xbb5ecfa8, 0x0347dbc4, 0xbb5ecfa8)
    TEST_J(0x67ae1e29, 0xed141958, 0x67ae1e29, 0xed141958)
    TEST_J(0xb0a61578, 0x9b7cab12, 0xb0a61578, 0x9b7cab12)
    TEST_J(0x37d9cf70, 0x14fbed08, 0x37d9cf70, 0x14fbed08)
    TEST_J(0xaefbfe00, 0x2ce81d90, 0xaefbfe00, 0x2ce81d90)
    TEST_J(0x33bb8cf0, 0x81818a0c, 0x33bb8cf0, 0x81818a0c)
    TEST_J(0xe2d0fb60, 0xc6564330, 0xe2d0fb60, 0xc6564330)
    TEST_J(0x75f3e4f8, 0xe296a2e0, 0x75f3e4f8, 0xe296a2e0)
    TEST_J(0xcec98738, 0xabf2004c, 0xcec98738, 0xabf2004c)
    TEST_J(0x2a8d7670, 0x342c7e80, 0x2a8d7670, 0x342c7e80)
    TEST_J(0x1718b9de, 0x62a3cb74, 0x1718b9de, 0x62a3cb74)
    TEST_J(0x8bc8b000, 0xf5037c60, 0x8bc8b000, 0xf5037c60)
    TEST_J(0x1d349520, 0x42aaf6d0, 0x1d349520, 0x42aaf6d0)
    TEST_J(0x9f7ceda0, 0x097ed578, 0x9f7ceda0, 0x097ed578)
    TEST_J(0xaa064de0, 0xb2b82ebc, 0xaa064de0, 0xb2b82ebc)
    TEST_J(0xa2679b76, 0xab833f68, 0xa2679b76, 0xab833f68)
    TEST_J(0x02b295e0, 0x442430f0, 0x02b295e0, 0x442430f0)
    TEST_J(0x3ee9f35c, 0x2ac4d9cc, 0x3ee9f35c, 0x2ac4d9cc)
    TEST_J(0xa53d5f40, 0x5e997488, 0xa53d5f40, 0x5e997488)
    TEST_J(0x442ab5dd, 0xc36f026b, 0x442ab5dd, 0xc36f026b)
    TEST_J(0x3322fda8, 0x9400f0a0, 0x3322fda8, 0x9400f0a0)
    TEST_J(0xd0e25fc8, 0x34a6c1ec, 0xd0e25fc8, 0x34a6c1ec)
    TEST_J(0x7b07c5ea, 0x22f0cf9c, 0x7b07c5ea, 0x22f0cf9c)
###detect exception
    bne s2, zero, inst_error
    nop
###score ++
    addiu s3, s3, 1
###output (s0<<24)|s3
inst_error:  
    sll t1, s0, 24
    or t0, t1, s3 
    sw t0, 0(s1)
    jr ra
    nop
END(n13_j_test)
